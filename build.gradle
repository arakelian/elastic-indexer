// elastic-indexer

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'eclipse'
    id 'idea'
    
    // keep dependencies up-to-date!
    id 'com.github.ben-manes.versions' version '0.46.0'

    // useful for creating immutable java beans
    id 'org.inferred.processors' version '3.7.0'

    // to ensure clean code
    id "net.ltgt.errorprone" version "3.1.0"

    // for deployment to Maven Central
    id "io.codearte.nexus-staging" version "0.30.0"
    
    // for antlr tasks
    id 'antlr'
}

group   = 'com.arakelian'
version = '8.0.1'


apply from: "core.gradle"

wrapper {
    gradleVersion = '8.1.1'
}

publishing.publications.mavenJava {
    pom {
        name = "Elastic Indexer"
        description = "High-level Java API for indexing data into Elastic."
        url = "https://github.com/arakelian/elastic-indexer"
        
        licenses {
            license {
                name = 'The Apache License, Version 2.0'
                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
            }
        }
        
        developers {
            developer {
                id = 'arakelian'
                name = 'Greg Arakelian'
                email = 'greg@arakelian.com'
            }
        }
        
        scm {
            connection = 'scm:git:https://github.com/arakelian/elastic-indexer.git'
            developerConnection = 'scm:git:git@github.com:arakelian/elastic-indexer.git'
            url = 'https://github.com/arakelian/elastic-indexer.git'
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "src/parser/java"]
        }
    }
    lexer {
        antlr {
            srcDirs = ['src/lexer/antlr']
        }
    }
}

generateGrammarSource {
    // overwrites anything in src/parser/java!
    outputDirectory = new File(projectDir, 'src/parser/java')
    arguments += ["-visitor","-lib","src/lexer/java/com/arakelian/elastic/search/parser"]
}

generateLexerGrammarSource {
    outputDirectory = new File(projectDir, 'src/lexer/java')
}

generateGrammarSource.dependsOn generateLexerGrammarSource

sourcesJar.dependsOn generateGrammarSource


tasks.withType(JavaCompile).configureEach {
    options.errorprone.excludedPaths = '(.*generated.*)|(.*/com/arakelian/elastic/search/parser/.*)'
}


dependencies {
    processor 'org.immutables:value:2.9.3'
    
    // annotations
    api 'org.immutables:value-annotations:2.9.3'
    
    // configure errorprone version
    errorprone 'com.google.errorprone:error_prone_core:2.18.0'
    
    api 'com.arakelian:more-commons:4.0.1'
    api 'com.arakelian:jackson-utils:4.0.1'
    api 'com.arakelian:json-filter:4.0.1'
    api 'com.arakelian:retry:6.0.1'
    
    // caching
    api 'com.github.ben-manes.caffeine:caffeine:3.1.6'

    // shadow Guava due to frequent downstream incompatibility issues
    api 'com.google.guava:guava:31.1-jre'

    // we use Multimap in ElasticDocConfig; we shadow jackson's guava library
    // so we don't add downstream guava dependency
    api  ('com.fasterxml.jackson.datatype:jackson-datatype-guava:2.14.2') {
        exclude module: 'jackson-databind'
        exclude module: 'jackson-core'
    }

    // shadow stuff we use very little of, to reduce dependencies
    api  'org.apache.commons:commons-lang3:3.12.0'
    api  'commons-io:commons-io:2.11.0'
    api  ('com.jayway.jsonpath:json-path:2.8.0') { exclude module: 'slf4j-api' }

    // default client uses okhttp3/retrofit
    compileOnly 'com.squareup.retrofit2:retrofit:2.9.0'
    compileOnly 'com.squareup.retrofit2:converter-scalars:2.9.0'
    compileOnly 'com.squareup.retrofit2:converter-jackson:2.9.0'
    compileOnly 'com.squareup.retrofit2:adapter-java8:2.9.0'
    compileOnly 'com.squareup.okhttp3:okhttp:4.9.3'
    compileOnly 'com.squareup.okhttp3:logging-interceptor:4.9.3'
    
    // third-party
    api 'com.lmax:disruptor:3.4.4'

    // lucene query string
    antlr  'org.antlr:antlr4:4.12.0'
    api    'org.antlr:antlr4-runtime:4.12.0'
    
    // logging
    testImplementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    testImplementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    testImplementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
    testImplementation 'org.slf4j:jcl-over-slf4j:2.0.7'
    testImplementation 'org.slf4j:jul-to-slf4j:2.0.7'
    api                'org.slf4j:slf4j-api:2.0.7'

    // for unit testing
    testImplementation 'com.arakelian:more-commons:4.0.0:tests'
    testImplementation 'com.arakelian:jackson-utils:4.0.0:tests'
    testImplementation 'com.arakelian:faker:4.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'net.javacrumbs.json-unit:json-unit:2.37.0'
    testImplementation 'org.testcontainers:testcontainers:1.18.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.0'
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.9.0'
    testImplementation 'javax.activation:activation:1.1.1'
    
    testImplementation 'com.squareup.retrofit2:retrofit:2.9.0'
    testImplementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    testImplementation 'com.squareup.retrofit2:converter-jackson:2.9.0'
    testImplementation 'com.squareup.retrofit2:adapter-java8:2.9.0'
    testImplementation 'com.squareup.okhttp3:okhttp:4.9.3'
    testImplementation 'com.squareup.okhttp3:logging-interceptor:4.9.3'
}
